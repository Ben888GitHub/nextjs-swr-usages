import Head from 'next/head';
import { useFetchData, fetchData } from '../hooks/useFetchData';
import styles from '../styles/Home.module.css';
import Link from 'next/link';
import { useState } from 'react';
import { SWRConfig, unstable_serialize } from 'swr';

export const getStaticProps = async () => {
	const github = await fetchData('https://api.github.com/repos/vercel/swr');
	const posts = await fetchData('https://jsonplaceholder.typicode.com/posts');

	return {
		props: {
			fallback: {
				'https://api.github.com/repos/vercel/swr': github,
				'https://jsonplaceholder.typicode.com/posts': posts
			}
		}
	};
};

export default function Home({ fallback }) {
	const [page, setPage] = useState(1);

	const { data, isLoading, error } = useFetchData(
		'https://api.github.com/repos/vercel/swr'
	);
	console.log(fallback);

	const {
		data: posts,
		error: postsError,
		isLoading: postsLoading
	} = useFetchData('https://jsonplaceholder.typicode.com/posts', page);

	// if (error || postsError) return 'An error has occurred.';

	if (isLoading || postsLoading) return <p>Loading...</p>;
	return (
		<SWRConfig value={{ fallback }}>
			<div className={styles.container}>
				<Head>
					<title>Create Next App</title>
					<meta name="description" content="Generated by create next app" />
					<link rel="icon" href="/favicon.ico" />
				</Head>

				<main>
					<h1>NextJs SWR Usages</h1>
					<br />
					{data && (
						<>
							<h1>{data.name}</h1>
							<p>{data.description}</p>
							<strong>üëÅ {data.subscribers_count}</strong>{' '}
							<strong>‚ú® {data.stargazers_count}</strong>{' '}
							<strong>üç¥ {data.forks_count}</strong>
						</>
					)}
					<br />

					{posts &&
						posts?.map((post) => (
							<div key={post.id}>
								<Link href={`/post/${post.id}`}>
									<h2>{post.title}</h2>
								</Link>
								<p>{post.body}</p>
							</div>
						))}

					<br />
					<button disabled={page === 1} onClick={() => setPage(page - 1)}>
						Previous
					</button>
					<button style={{ marginLeft: 10 }} onClick={() => setPage(page + 1)}>
						Next
					</button>
				</main>
			</div>
		</SWRConfig>
	);
}
